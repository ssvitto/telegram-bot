name: Docker-Image-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    #runs-on: Linux
    runs-on: ubuntu-latest

    steps:
    #- uses: actions/checkout@v3
    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-bot
   
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build the Docker image
    - uses: actions/checkout@v3
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: telegram-bot
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
   
  #deploy: 

  #   runs-on: Linux
  #   needs: [build]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: run the Docker image
  #     run: |
  #          docker stop telegabot
  #          docker run -d --rm --name=telegabot my-bot
            
  
